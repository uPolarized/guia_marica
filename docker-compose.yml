# D:\projetografo\docker-compose.yml (ou o nome que você usa)

version: '3.8' # Ou a versão que você está usando

services:
  web:
    build: .
    # ***** COMANDO ATUALIZADO ABAIXO *****
    command: >
      sh -c "echo 'Aguardando o banco de dados ficar pronto...' &&
             python manage.py migrate --noinput &&
             echo 'Migrações aplicadas! Iniciando o servidor de desenvolvimento...' &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app  # Mapeia seu código local para dentro do container para live reload
      - ./media:/app/media # Se MEDIA_ROOT em settings.py for /app/media
    ports:
      - "8000:8000"
    env_file:
      - .env # Carrega variáveis de ambiente do arquivo .env
    depends_on:
      db:
        condition: service_healthy # Já espera o 'db' estar saudável, ótimo!
  
  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/ # Persistência dos dados do Postgres
    environment:
      # Estas variáveis são usadas pelo container do Postgres para inicializar o banco
      POSTGRES_DB: django_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password 
      # Certifique-se que seu settings.py usa estas credenciais (via .env)
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d django_db"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: # Define o volume nomeado para persistir os dados do PostgreSQL